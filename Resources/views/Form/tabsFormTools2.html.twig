{# Version du 13/03/2018 Ajout readonly chk dans addTabForms SSI editable=0



24/10/2017 resolv bug dans "majTotals{{ label }}(debug)" + tr data-id data-class data-index
14/12/2016 resolv bug interaction de champs du même nom function majTotals{{ label }}() => préfixage avec label
24/11/2016 Optimisation & resolv bug latences jQuery addSubFormTab + Totals !!!

+ regroupement des virtuals

27/10/2016 resolv bug arDefault init

24/10/2016 addTabForms style th  +text-align: center;vertical-align: middle;
17/10/2016 + checked default values
+ sur <tr ... class=" .. col_{{ label }}_id_{{ (oneH.vars.value.id)?oneH.vars.value.id:0 }}" >
+ resolv bug libne tfoot vide (cTotal is itérable + |lenght>0)
+  editable=1 si = 0 boutons add + delete masqués
 add style table-small
  add td hidden SSI formType avoit champs de type 'hidden' + id class/colonne
  raw sur le label => personnalisation HTML possible <span title=... class=... ></span> +
  detection de collection => prototype pour génération des sous formulaire imbriqué
 #}
{% spaceless %}
{% macro addTabForms(vars_prototype,vars_values,label,handleOnCreate,handleOnDelete,arDefaults,cTotal,tabClass,editable,ErrCounter) %}
  <style>
    .table-small > tbody > tr > td { padding:2px;  }
    .table-small > thead > tr > th { padding:4px;text-align: center;vertical-align: middle;  }
    .table-small > tfoot > tr > td { padding:2px;  }
    .table-small > tfoot > tr > th { padding:2px;  }
  </style>
  {% set btn_css= (('Sub' in label)?"btn-xs":"btn-sm") %}
  {#
  {% set custPrototype="" %}
  {% for n,oneH in vars_values %}
  {% set n='__name__' %}
  {% set baseId=vars_prototype.vars.id %}
    {% set custPrototype=  '<tr id="colPart_'~label~'_'~n~'">' %}
      {% for k,v in vars_prototype %}
        {# children fieldNames # }
        {% set custPrototype=custPrototype~'<td>'~form_widget(oneH[v.vars.name],{ 'attr':{ 'id': baseId~v.vars.name }  })|replace({"'":"\'"})~'</td>' %}
      {% endfor %}
        {% set custPrototype=custPrototype~'<td style="vertical-align:middle;"><span class="btn btn-danger glyphicon glyphicon-remove" onclick="if(confirm(\'Etes-vous certains de vouloir supprimer cette ligne ?\')){ $(\'#colPart_'~label~'_'~n~'\').remove(); };"></span></td>'  %}
      {% set custPrototype=custPrototype~'</tr>' %}
  {% endfor %}
    <pre>
      <div class="alert-success">MY prototype{{ dump(custPrototype) }}</div>
      <div class="alert-danger">vars_prototype{{ dump(vars_prototype) }}</div>
      <div class="alert-warning">form_widget(vars_prototype)|e{{  form_widget(vars_prototype, {  })|e }}</div>
  </pre>

  #}
{% set errCount=0 %}

  {#<pre>{{ form_widget(vars_prototype)|e }}</pre>#}


  <table id="tabForm{{ label }}" class="{{ tabClass|default("table table-bordered table-striped table-small") }}" {{ (('Sub' in label)?'style="font-size:0.85em;"':'')|raw }} >
        <thead>
        <tr class="{{  ('dataTable' in tabClass|default(""))?"":"bg-primary h4 " }}" {{ (('Sub' in label)?'style="font-size:0.85em;"':'')|raw }} >
            {% for k,v in vars_prototype %}
                <th class="{{ ('hidden' in v.vars.block_prefixes)?"hidden":""  }}">
                  {{ v.vars.label|default(v.vars.name|humanize)|raw }}{# ({{ k }})#}</th>
            {% endfor %}
          {% if editable|default(1)>0 %}
            <th>&nbsp;</th>
          {% endif %}
        </tr>
        </thead>

      {#{% form_theme vars_prototype '@AmuReferentiels/_amu_form_tab.html.twig' %}#}
      {% form_theme vars_values ':Form:_amu_form_tab.html.twig' %}
    {#{% form_theme vars_values 'form_table_layout.html.twig' %}#}

        <tbody class="tabCollectionContainer_{{ label }}" data-prototype="{{ form_widget(vars_prototype)|e }}" {{ (('Sub' in label)?'style="font-size:0.85em;"':'')|raw }}>
        {% for n,oneH in vars_values %}
          <tr data-id="{{ (oneH.vars.value.id)?oneH.vars.value.id:0 }}" data-class="{{ label }}" data-index="{{ n }}" id="colPart_{{ label }}_{{ n }}" class="col_{{ label }} col_{{ label }}_id_{{ (oneH.vars.value.id)?oneH.vars.value.id:0 }}" >
          {% set id=null %}
            {% for k,v in vars_prototype %}
                {% if v.vars.name=='id' %}
                  {% set id=oneH[v.vars.name].vars.value %}
                {% endif %}
                <td class="center {{ ((v.vars.name=='id') or ('hidden' in v.vars.block_prefixes))?"hidden":""  }}" style="vertical-align:middle ;">
                  {% if 'dataTable' in tabClass|default("") %}
                  <span class="hidden">{{ oneH[v.vars.name].vars.value|json_encode }}</span>
                    {% if 'checkbox' in v.vars.block_prefixes  %}
                      {#checkbox=>  {{ dump(oneH[v.vars.name]) }}#}
                    {% endif %}
                  {% endif %}
                  {% if v.vars.prototype is defined %} {# detection de collection => prototype #}
                    {#<span data-ref="#subTab{{ label }}_{{ n }}" data-title="{{ v.vars.name|title }}" data-trigger="click" class="bt-popover-ref glyphicon glyphicon-list-alt"></span>#}
                    {#<span data-ref="#subTab{{ label }}_{{ n }}" data-title="{{ v.vars.name|title }}" data-trigger="click" class="bt-popover-ref2 glyphicon glyphicon-list-alt"></span>#}
                    {#<span onclick="try{ $('#subTab{{ label }}_{{ n }}').dialog({destroy:true}); }catch(e){} $('#subTab{{ label }}_{{ n }}').dialog();" class="glyphicon glyphicon-list-alt"></span>#}
                    {#<div class="hidden">#}
                      {#<div id="subTab{{ label }}_{{ n }}" class="subTab{{ label }}" >#}
                        {{  _self.addTabForms(oneH[v.vars.name].vars.prototype,oneH[v.vars.name], ("Sub"~n~"_"~v.vars.name|title),"",{},[],"table table-bordered table-striped table-small")  }}
                      {#</div>#}
                    {#</div>#}
                  {% elseif (v.vars.compound|default(false) == true) %}
                    {% for c in v.vars.form.children %}
                        <div class="from-group form-inline {{ ('hidden' in c.vars.block_prefixes)?"hidden":""  }}">
                        {{ c.vars.label }}<br/>
                          {#{{  form_label(oneH[ v.vars.name][c.vars.name]) }}#}
                          {{  form_widget(oneH[ v.vars.name][c.vars.name]) }}
                        </div>
                      <br/>
                    {% endfor %}
                  {% else %}
                      {% if editable|default(1)==0  %}
                          {{ form_widget(oneH[v.vars.name],{ 'attr':{ 'readonly':'readonly', 'class':'disabled' } }) }}{% if form_errors(oneH[v.vars.name])!="" %}{% set errCount=errCount+1 %}<span class="text-danger" style="font-size: x-large;" data-trigger="hover" data-toggle="popover" data-title="Erreur" data-html=true data-content="{{ form_errors(oneH[v.vars.name]) }}"><span class="glyphicon glyphicon-exclamation-sign"></span></span>{% endif %}</td>
                      {% else %}
                      {{ form_widget(oneH[v.vars.name]) }}{% if form_errors(oneH[v.vars.name])!="" %}{% set errCount=errCount+1 %}<span class="text-danger" style="font-size: x-large;" data-trigger="hover" data-toggle="popover" data-title="Erreur" data-html=true data-content="{{ form_errors(oneH[v.vars.name]) }}"><span class="glyphicon glyphicon-exclamation-sign"></span></span>{% endif %}</td>
                      {% endif %}
                  {% endif %}
                </td>
            {% endfor %}
            {% if editable|default(1)>0 %}
              <td class="center col_{{ label }}_id_{{ id|default("") }}" style="vertical-align:middle;">&nbsp;<span class="btn btn-danger {{ btn_css }} glyphicon glyphicon-remove" onclick="if({{ handleOnDelete|default("confirm('Etes-vous certains de vouloir supprimer cette ligne ?')")|raw }}){ $('#colPart_{{ label }}_{{ n }}').remove(); majTotals{{ label }}(); };"></span>&nbsp;</td>
            {% endif %}
          </tr>
        {% endfor %}
        </tbody>
        <tfoot>
        {% if (cTotal is defined) and (cTotal is iterable) and(cTotal|length>0) %}
          <tr class="info">
            {% set iCol=1 %}
            {% for k,v in vars_prototype %}
              {% if (k in cTotal)  %}
                <th class="{{ ('hidden' in v.vars.block_prefixes)?"hidden":"text-danger"  }}" ><input readonly style="width:100%;border: transparent 0px;background-color: transparent;" id="colTotal_{{ label }}_{{ k }}" input value="..."/></th>
              {% else %}
                <th class="{{ ('hidden' in v.vars.block_prefixes)?"hidden":"text-primary center"  }}" >&nbsp;</th>
              {% endif %}
            {% endfor %}
            <th> </th>
          </tr>

        {% endif %}
        {% if editable|default(1)>0 %}
          <tr class="warning"><th colspan="{{ vars_prototype|length +1 }}">&nbsp;<span class="btn {{ btn_css }}  btn-success" onclick="addSubFormTab{{ label }}('{{ label }}'{% if (handleOnCreate is defined) and (handleOnCreate!=null) and (handleOnCreate!="")  %},{{ handleOnCreate }}{% endif %});majTotals{{ label }}();"><span class="glyphicon glyphicon-plus pull-left" ></span>&nbsp;Ajouter...</span></th></tr>
        {% endif %}
        </tfoot>
    </table>


<script language="JavaScript" type="text/javascript">

  {# Ajout Maj Auto des Totaux via jQuery sur onKeyup et change #}
  function majTotals{{ label }}(debug){
    {% if (cTotal is defined) and ((cTotal is iterable) or (cTotal=="*")) %}
    {% for k,v in vars_prototype if (k in cTotal)%}
      if(debug){alert('tbody.tabCollectionContainer_{{ label }} tr td input[id$="_{{ k }}"]'+" = "+$('tbody.tabCollectionContainer_{{ label }} tr td input[id$="_{{ k }}"]').length );}

      try{ $("#colTotal_{{ label }}_{{ k }}").val( 0); }catch(e){ };

    $('tbody.tabCollectionContainer_{{ label }} tr td input[id$="_{{ k }}"]').each(function (a) {
        $(this).addClass("{{ label|lower }}_{{ k }}_value");
        if(debug){ alert(a+"init+cls =>"+'_{{ label }}_'+ " = OK"); }
        $(this).bind("keyup change",function () {
        if(debug){ alert("majTotals{{ label }}() sur "+$(this).attr('id')); }
        var t = 0;
        $('.{{ label|lower }}_{{ k }}_value').each(function (i) {
            try{
              var v=0;
              if( $(this).val()){
                v= $(this).val().replace(',','.');
              }
              t+=parseFloat( v );
            }catch (e){
              t+="ERROR sur:\n" + $(this).attr('id')+" = "+$(this).val();
            }
        });
        try{ $("#colTotal_{{ label }}_{{ k }}").val(t.toFixed(2)).keyup().change(); }catch(e){ } });
      });
      $('.{{ label|lower }}_{{ k }}_value:first').keyup().change();

    {% endfor %}
  {% endif %}
  }

  function addSubFormTab{{ label }}(colName, onCreateSubFormHandle) {
    var ctrl=$('#tabForm'+colName+' tbody.tabCollectionContainer_'+colName);
    {# var n = ctrl.children().length;#}
    var n = $('#tabForm'+colName+' tbody.tabCollectionContainer_'+colName+' tr').length;
    var newForm = ctrl.attr('data-prototype').replace(/__name__/g, n );
    {#
   var newForm='<tr id="colPart_{{ label }}_'+n+'">{% for k,v in vars_prototype %}<td>{{ form_widget(oneH[v.vars.name]) }}</td>{% endfor %}'+delBt+'</tr>'
   #}
    var delBt='<td class="center" style="vertical-align:middle;">&nbsp;<span class="btn {{ btn_css }} btn-danger glyphicon glyphicon-remove" onclick="if(confirm(\'Etes-vous certains de vouloir supprimer cette ligne ?\')){ $(\'#colPart_'+colName+'_'+n+'\').remove(); majTotals{{ label }}(); };"></span>&nbsp;</td>';
    newForm=newForm.replace("<tr",'<tr id="colPart_'+colName+'_'+n+'" class="col_'+colName+'" ');
    newForm=newForm.replace("</tr>",delBt+"</tr>");
    {% if (arDefaults is defined) and (arDefaults is iterable) and (arDefaults|length>0)%}
    {% for k,v in arDefaults %}
      {% if 'checked' in v %}
        newForm=newForm.replace('['+n+'][{{ k }}]"','['+n+'][{{ k }}]" checked=checked');
       {% else %}
        newForm=newForm.replace('['+n+'][{{ k }}]"','['+n+'][{{ k }}]" value={{ v }} ');
      {% endif %}
    {% endfor %}
    {% endif %}
    $(newForm).appendTo(ctrl);

    if(onCreateSubFormHandle && onCreateSubFormHandle!=""){
      onCreateSubFormHandle();
    }

    try{
     ihm.initAll();
    }catch (e){}

    majTotals{{ label }}();
    $('input.active:disabled').removeClass('ui-state-disabled'); //.css('color','black');
//    $('.table-condensed2 > tfoot > tr > td,.table-condensed2 > tfoot > tr > th,.table-condensed2 > thead > tr > td,.table-condensed2 > thead > tr > th').css('padding','0px');
  }

  majTotals{{ label }}();
  try{
    ihm.initAll();
  }catch (e){}
  {% if (errCount|default(0)>0) and (ErrCounter is defined) and (ErrCounter!="") %}
  $('#{{ ErrCounter }}').html("</br>&nbsp;<span class='text-danger'>Il y a {{ errCount }} erreur(s)...<span>");
  {% endif %}

  {#{% if 'dataTable' in tabClass|default("") %}#}
    {#ihm.initAll();#}
  {#{% endif %}#}
</script>
{% endmacro addTabForms %}
{% endspaceless %}

{% macro addJSTools() %}
<script language="JavaScript" type="text/javascript">

  function genericConvertULVisuToAccordion(ULcls,title,varHeadInfos) {
    var $lb = $("." + ULcls).find("div.amuFormsLabel label:first");
    var n = 1;
    if($lb !== undefined)
    try{
      parseInt($lb.html()) + 1;
      if ($lb.html().match(/\d/)) {// Si le html du 1ier est un Chiffre Alors on l'enlève
        $lb.remove();
      }
    }catch(e){}

    if (n > 0) {
      var idLnk = $(this).find("table").attr("id") + "_" + (varHeadInfos ? varHeadInfos : "_lnk_");
      $(this).html("<div class='subFormAcc'><h3 >" + title + " N°" + n + ' : <span link="' + idLnk + '" >' + $("#" + idLnk).val() + "</span></h3><div class='_subFormContainer'>" + $(this).html() + "</div></div>");
      if (varHeadInfos) {
        $('#' + idLnk).change(function () {
          $('span[link="' + idLnk + '"]').html($(this).val());
        });
        $('#' + idLnk).keyup(function () {
          $('span[link="' + idLnk + '"]').html($(this).val());
        });
      }
    }
  }

  /**
   * Ajout d'un control jQuery auto-complétion de listing des individus issu du LDAP (student,personnel...)
   * 
   * @param {string} idListing l'id du control de saisie
   * @param {array} tableau de liens entre les valeurs de retours et les champs (id) du formulaire : array("idControl_a_mettre_a_jour" => "ldap.item.value", ...)
   * @returns {null} */
  function genericLdapPersonSearchOld(idListing,arLinks){

    function normJSON(str){ if(str===null){ return("?"); }else{ return(str.toString().replace(/'/g,"&apos;")).replace(/,/g,", "); } }

    function getTips(item){
      var tips="";
      if(item)
        if(item.edupersonprimaryaffiliation!=""){
          tips +="<center><b>Type de personnel :</b> "+ item.edupersonprimaryaffiliation+'</center>';
        switch(item.edupersonprimaryaffiliation){
          case "student":  
            tips +="</br> <b>Code &eacute;tudiant :</b> "+ item.supannetuid;
            tips +="</br> <b>Dilpl&ocirc;me :</b> "+ item.supannetudiplome;
            tips +="</br> <b>&Eacute;pape :</b> "+ item.supannetuetape;
            tips +="</br> <b>Ann&eacute;e d&apos;inscription :</b> "+ item.supannanneeinscription;
            break;
          case "faculty": 
          case "employee": 
          case "researcher": 
            tips +="</br> <b>Code personnel:</b> "+ item.supannempid;
            break;
          }
        }
        //if(item.supannaffectation!=null) tips +="</br> <b>Affectation :</b> </br>&nbsp;&nbsp;- "+ normJSON(item.supannaffectation).replace(/,/g,"</br>&nbsp;&nbsp;- ");
        //else 
        tips +="</br> <b>Affectation(s) :</b> "+ normJSON(item.supannentiteaffectation);
        tips +="</br> <b>Affectation principale :</b> "+ normJSON(item.supannentiteaffectationprincipale);
        tips +="</br> <b>Établissement :</b> " + normJSON(item.supannetablissement);
        tips += "<hr> <b>Campus :</b> " + normJSON(item.amucampus) +
               "</br> <b>Site :</b> " + normJSON(item.amusite) +
               "</br> <b>Composante :</b> " + normJSON(item.amucomposante); 
          return(tips);
     }

    function getIco2(af){
      var ico="{{ asset("bundles/app/images/ico/16/vide.png") }}";
      if(af!=null){
        if(af!="")
        switch(af){
          case "MED": ico="{{ asset("bundles/app/images/ico/16/surgeon.png") }}"; break;
          case "MEX": ico="{{ asset("bundles/app/images/ico/16/doctor-white.png") }}"; break;
          case "ODO": ico="{{ asset("bundles/app/images/ico/16/med-tooth.png") }}"; break;
          case "PHA": ico="{{ asset("bundles/app/images/ico/16/med-pharmacy.png") }}"; break;
          case "ESF": ico="{{ asset("bundles/app/images/ico/16/doctor-white.png") }}"; break;
          {#
         /* case "G0":
          case "P0":
          case "T0": ico="{{ asset("bundles/app/images/ico/16/company.png") }}";break;*/ #}
          case 'POL': ico="{{ asset("bundles/app/images/ico/16/stats-trace.png") }}";break;
          case 'IUT':
          case 'IAX':
          case 'IDI':
          case '40':  ico="{{ asset("bundles/app/images/ico/16/light2.png") }}";break;
            // bundles/app/images/ico/16/molecule.png
          case 'STM': ico="{{ asset("bundles/app/images/ico/16/stickman-run.png") }}";break;
          {# /*case 'D0':
          case 'D1':
          case 'D2': ico="{{ asset("bundles/app/images/ico/16/justice-balance.png") }}";break;*/ #}
          case 'JOU': ico="{{ asset("bundles/app/images/ico/16/information.png") }}";break;
          case 'ESP': ico="{{ asset("bundles/app/images/ico/16/certif-2.png") }}";break;
          case 'LSH':ico="{{ asset("bundles/app/images/ico/16/books.png") }}";break;
          default:
              switch(af.toString().substr(0,2)){
                case 'JO': ico="{{ asset("bundles/app/images/ico/16/information.png") }}";break;
                case 'LS':/* LSH*/ ico="{{ asset("bundles/app/images/ico/16/books.png") }}";break;
                case 'SC': ico="{{ asset("bundles/app/images/ico/16/labo-science.png") }}";break;
                case 'EG': ico="{{ asset("bundles/app/images/ico/16/eco-finance-money-euro.png") }}";break;
                case 'PO': ico="{{ asset("bundles/app/images/ico/16/stats-trace.png") }}";break;
                case 'ES': ico="{{ asset("bundles/app/images/ico/16/certif-2.png") }}";break;
                  default: 
                    if(af.toString().length===2)
                    switch(af.toString().substr(0,1)){
                      case 'F': ico="{{ asset("bundles/app/images/ico/16/spellcheck.png") }}";break;
                      case 'D': ico="{{ asset("bundles/app/images/ico/16/justice-balance.png") }}";break;
                      case 'G':
                      case 'P':
                      case 'T': ico="{{ asset("bundles/app/images/ico/16/company.png") }}";break;
                    }
              }
        }
      }
      return(ico);
    }

    function getIco(pa){
      var ico="{{ asset("bundles/app/images/ico/16/unknow.png") }}";
      if(pa!=null){
        if(pa!="")
        switch(pa){
          case "faculty":  ico="{{ asset("bundles/app/images/ico/16/faculty.png") }}"; break;
          case "student":  ico="{{ asset("bundles/app/images/ico/16/student-2.png") }}"; break;
          case "employee": ico="{{ asset("bundles/app/images/ico/16/amu.png") }}";break;
          case "researcher": ico="{{ asset("bundles/app/images/ico/16/cnrs.png") }}";break;
          case 'member': ico="{{ asset("bundles/app/images/ico/16/unknow.png") }}";break;
        }
      }
      return(ico);
    }

    if(idListing){
      $("#"+idListing).autocomplete({ minLength:2,delay:0,source:"{{ path("ajxLdapPersonnelsList") }}",
          create: function() {
            $(this).data('ui-autocomplete')._renderItem = function( ul, item ) { 
              $(ul).css({ "max-height": "250px", "overflow-y":"auto" , "overflow-x": "hidden" });
              return $( "<li>" )
                .attr( "data-value", item.value )
                .append( $( "<a class='TabInfos cluetip' title='Informations sur cette personne...|<small>"+ getTips(item)+"</small>' ><nobr>" + "<img align='absmiddle' src='"+ getIco(item.edupersonprimaryaffiliation)+"' /><img align='absmiddle' src='"+ getIco2(item.supannentiteaffectationprincipale)+"' />&nbsp;" + item.cn + " <b>(P"+ normJSON(item.amuperimetre) +")</b>" + "</nobr></a>" ) )
                .appendTo( ul );
            };
          },
          focus:function(event,ui){ /* $("#amu_pacbobundle_admins_login").val(ui.item.value); $("#amu_pacbobundle_admins_infos").val(ui.item.label);*/  },
          open:function(event,ui){ try { amu.initTips(); }catch (e){ } },
          //search: function( event, ui ) { /*$("#_dbgListingPers_wait").show();*/ },
          //response: function( event, ui ) { /*$("#_dbgListingPers_wait").hide();*/ },
          select:function(event,ui){
            if(arLinks){
              for(var fld in arLinks){
                try {
                  if(ui.item[fld]){ $("#"+arLinks[fld]).val(ui.item[fld]); }
                }catch (e){ }
              }
            }
            return false; 
          } 
        });
    }
  }



  /**
   * Ajout d'un control jQuery auto-complétion de listing des individus issu du LDAP (student,personnel...)
   *
   * @param {string} idListing l'id du control de saisie
   * @param {array} tableau de liens entre les valeurs de retours et les champs (id) du formulaire : array("idControl_a_mettre_a_jour" => "ldap.item.value", ...)
   * @returns {null} */
  function genericLdapPersonSearchBS(idListing,arLinks){

    if($('#'+idListing)){
      {# ajout filtrage + researcher #}
      $('#'+idListing).autocomplete(
              { source: "{{ path('ajxLdapPersonnesList', { 'filter':'(|(eduPersonPrimaryAffiliation=employee)(eduPersonPrimaryAffiliation=member)(eduPersonPrimaryAffiliation=faculty)(eduPersonPrimaryAffiliation=researcher))'}) }}",
                minLength: 2,
                select: function( event, ui ) {
                if(arLinks){
                  for(var fld in arLinks){
                    try {
                      if(ui.item[fld]){ $("#"+arLinks[fld]).val(ui.item[fld]); }
                    }catch (e){
                      alert("tabsFormTools Error => "+fld+" non trouvé...")
                    }
                  }
                }
                return false; //$('#'+idListing).val("");
              }
      }).autocomplete( "instance" )._renderItem = function( ul, item ) {

        var ti= {
          'faculty':'<span class="glyphicon glyphicon-blackboard"></span>',
          'employee':'<span class="glyphicon glyphicon-briefcase"></span>',
          'student':'<span class="glyphicon glyphicon-education"></span>',
          'researcher':'<span class="glyphicon glyphicon-glyphicon glyphicon-globe"></span>',
          'alum':'<span class="glyphicon glyphicon-star-empty"></span>',
          '':'<span class="glyphicon glyphicon-question-sign"></span>',
        };
        var tl= {
          'faculty':'<span class="text-primary">Enseignant</span>',
          'employee':'<span class="text-success">Personnel</span>',
          'student':'<span class="text-warning">Étudiant</span>',
          'researcher':'<span class="text-danger">Chercheur</span>',
          'alum':'<span class="text-danger">Ancien étudiant</span>',
          '':'Inconnue',
        };
        var t2= {
          'faculty':'<span class="glyphicon glyphicon-blackboard"></span>&nbsp;Enseignant',
          'employee':'<span class="glyphicon glyphicon-briefcase"></span>&nbsp;Personnel',
          'student':'<span class="glyphicon glyphicon-education"></span>&nbsp;Étudiant',
          'researcher':'<span class="glyphicon glyphicon-glyphicon glyphicon-globe"></span>&nbsp;Chercheur',
          'alum':'<span class="glyphicon glyphicon-star-empty"></span>&nbsp;Ancien étudiant',
          '':'<span class="glyphicon glyphicon-question-sign"></span>&nbsp;Inconnue',
        };

        var a=item.edupersonprimaryaffiliation;

        var ico=(ti[a] !== undefined)?ti[a]:'<span class="glyphicon glyphicon-question-sign"></span>';
        var txt=(tl[a] !== undefined)?tl[a]:'Inconnue';

        return $( "<li>" )
                .append( "<div>" + ico + " " + item.supanncivilite + " " + item.label + "  :  " + txt + ((item.amucomposante!="")?", à <b>"+ item.amucomposante.toString().toUpperCase() + "</b>":"") +   "</div>" )
                .appendTo( ul );
      };

    }




  }

</script>

{% endmacro addJSTools %}