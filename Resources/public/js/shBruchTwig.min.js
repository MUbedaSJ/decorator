!function(){function e(){this.regexList=[{regex:SyntaxHighlighter.regexLib.multiLineDoubleQuotedString,css:"string"},{regex:/({#)(.*)(#})/g,css:"comments"},{regex:/({%)|(%})/g,css:"keyword"},{regex:/({{)|(}})/g,css:"keyword"},{regex:/\|/,css:"keyword"},{regex:/\/\/.*/,css:"color1"},{regex:new RegExp(this.getKeywords("abs batch capitalize convert_encoding date date_modify default escape first format join json_encode keys last length lower merge nl2br number_format raw replace reverse round slice sort split striptags title trim upper url_encode index index0"),"gmi"),css:"functions"},{regex:new RegExp(this.getKeywords("autoescape block do embed extends filter flush for from if import include macro sandbox set spaceless use verbatim else elseif endif loop"),"gmi"),css:"keyword"},{regex:new RegExp(this.getKeywords("attribute block constant cycle date dump include max min parent random range source template_from_string"),"gmi"),css:"keyword"},{regex:new RegExp(this.getKeywords("constant defined divisibleby empty even iterable null odd sameas"),"gmi"),css:"keyword"},{regex:new RegExp(this.getKeywords("in is and or not b-and b-or b-xor starts ends with matches"),"gmi"),css:"keyword"}],this.forHtmlScript({left:/({)(%|{)/g,right:/(%|})(})/g,eof:!0})}SyntaxHighlighter=SyntaxHighlighter||("undefined"!=typeof require?require("shCore").SyntaxHighlighter:null),e.prototype=new SyntaxHighlighter.Highlighter,e.aliases=["twig"],SyntaxHighlighter.brushes.Twig=e,"undefined"!=typeof exports&&(exports.Brush=e)}();